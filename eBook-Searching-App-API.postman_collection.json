{
	"info": {
		"_postman_id": "f3201f24-1fb0-4e92-97f7-320da435e934",
		"name": "eBook Searching App API",
		"description": "API for managing and searching eBooks, users, and their preferences.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34788883",
		"_collection_link": "https://planetary-flare-681039.postman.co/workspace/Call-Theme~40addc76-e31c-4db9-b41a-cfbfdff0cb8d/collection/34788883-f3201f24-1fb0-4e92-97f7-320da435e934?action=share&source=collection_link&creator=34788883"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "users/auth",
					"item": [
						{
							"name": "(Authentication service) Register API",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								},
								"description": "- Register API for new users.\n- Creates a new user with a username, email, and password.\n- Screen 7 (Registration)\n"
							},
							"response": [
								{
									"name": "User registered successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/auth/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"auth",
												"register"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"profile\": {\n    \"setup\": \"<boolean>\",\n    \"userId\": \"<integer>\",\n    \"email\": \"<string>\",\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"dateOfBirth\": \"<string>\"\n  },\n  \"accessToken\": \"<string>\",\n  \"expirationTimestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Invalid registration data.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"username\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/auth/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"auth",
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"username\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "(Authentication service) Login API",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								},
								"description": "- Login API, returned JWT Token.\n- Screen 3 (Login)\n"
							},
							"response": [
								{
									"name": "User profile",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/auth/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"auth",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"profile\": {\n    \"setup\": \"<boolean>\",\n    \"userId\": \"<integer>\",\n    \"email\": \"<string>\",\n    \"username\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"gender\": \"<string>\",\n    \"dateOfBirth\": \"<string>\"\n  },\n  \"accessToken\": \"<string>\",\n  \"expirationTimestamp\": \"<int>\"\n}"
								},
								{
									"name": "Wrong credentials.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/auth/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"auth",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "auth/profile/{userId}",
					"item": [
						{
							"name": "(Authentication service) Update user profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fullName\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"dateOfBirth\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/profile/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"profile",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								},
								"description": "- Update user profile.\n- Screen setup account.\n"
							},
							"response": [
								{
									"name": "User profile",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fullName\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"dateOfBirth\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/profile/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"profile",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"setup\": \"<boolean>\",\n  \"userId\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"username\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"dateOfBirth\": \"<string>\"\n}"
								},
								{
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fullName\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"dateOfBirth\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/profile/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"profile",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"fullName\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"dateOfBirth\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized (not logged in or invalid token).",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fullName\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"dateOfBirth\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/profile/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"profile",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden (attempt to access another user's profile).",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fullName\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"dateOfBirth\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/profile/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"profile",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found error, if userId is not found or invalid (e.g., passed as a string).",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fullName\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"dateOfBirth\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/auth/profile/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"profile",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "(Authentication service) User profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/auth/profile/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"profile",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "<int>",
											"description": "(Required) "
										}
									]
								},
								"description": "- Retrieve user profile.\n- Screen 53 (Personal Details)\n"
							},
							"response": [
								{
									"name": "User profile",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/auth/profile/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"profile",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<int>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"setup\": \"<boolean>\",\n  \"userId\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"username\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"gender\": \"<string>\",\n  \"dateOfBirth\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized (not logged in, invalid token, ...)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/auth/profile/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"profile",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<int>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden (access other user's profile).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/auth/profile/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"profile",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<int>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not found error, if clients pass userId as string, ...",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/auth/profile/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"profile",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "<int>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "books",
					"item": [
						{
							"name": "(Book service) Search books by criteria",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/books/search?keyword=<string>&genreId=<int>&genreSlug=<string>&limit=<int>&offset=<int>&orderBy=<string>&orderDirection=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"search"
									],
									"query": [
										{
											"key": "keyword",
											"value": "<string>",
											"description": "keyword, sentence to search."
										},
										{
											"key": "genreId",
											"value": "<int>",
											"description": "genreId of books"
										},
										{
											"key": "genreSlug",
											"value": "<string>",
											"description": "slugName of genre (\"My school\" -> \"my-school\")"
										},
										{
											"key": "limit",
											"value": "<int>",
											"description": "limit the number of records to fetch, default 5."
										},
										{
											"key": "offset",
											"value": "<int>",
											"description": "offset to fetch from, default 0."
										},
										{
											"key": "orderBy",
											"value": "<string>",
											"description": "field to orderBy, default 'avgRating'."
										},
										{
											"key": "orderDirection",
											"value": "<string>",
											"description": "direction to sort, default 'desc'"
										}
									]
								},
								"description": "- Search books by criteria, with limit.\n- (Mobile) Screen 18 (Home)\n- (Mobile) Screen list book by category.\n- (User Web) Search book screen\n"
							},
							"response": [
								{
									"name": "List of books",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/books/search?keyword=<string>&genreId=<int>&genreSlug=<string>&limit=<int>&offset=<int>&orderBy=<string>&orderDirection=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												"search"
											],
											"query": [
												{
													"key": "keyword",
													"value": "<string>"
												},
												{
													"key": "genreId",
													"value": "<int>"
												},
												{
													"key": "genreSlug",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<int>"
												},
												{
													"key": "offset",
													"value": "<int>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "orderDirection",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<int>\",\n      \"uri\": \"<string>\",\n      \"avgRating\": \"<double>\",\n      \"image\": \"<base64>\",\n      \"author\": \"<string>\",\n      \"title\": \"<string>\"\n    },\n    {\n      \"id\": \"<int>\",\n      \"uri\": \"<string>\",\n      \"avgRating\": \"<double>\",\n      \"image\": \"<base64>\",\n      \"author\": \"<string>\",\n      \"title\": \"<string>\"\n    }\n  ],\n  \"limit\": \"<int>\",\n  \"numPages\": \"<int>\",\n  \"offset\": \"<int>\",\n  \"totalItems\": \"<int>\",\n  \"bookDetail\": {\n    \"author\": [\n      {\n        \"name\": \"<string>\",\n        \"stageName\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"birthDate\": \"<string>\",\n        \"birthPlace\": \"<string>\",\n        \"deathDate\": \"<string>\",\n        \"website\": \"<string>\",\n        \"description\": \"<string>\",\n        \"image\": \"<string>\"\n      },\n      {\n        \"name\": \"<string>\",\n        \"stageName\": \"<string>\",\n        \"nationality\": \"<string>\",\n        \"birthDate\": \"<string>\",\n        \"birthPlace\": \"<string>\",\n        \"deathDate\": \"<string>\",\n        \"website\": \"<string>\",\n        \"description\": \"<string>\",\n        \"image\": \"<string>\"\n      }\n    ],\n    \"avgRating\": \"<double>\",\n    \"categories\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"description\": \"<string>\",\n    \"genres\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<int>\",\n    \"image\": \"<base64>\",\n    \"language\": \"<string>\",\n    \"publicationTime\": \"<int>\",\n    \"publisher\": \"<string>\",\n    \"ratingCount\": \"<int>\",\n    \"reviews\": [\n      {\n        \"image\": \"<base64>\",\n        \"reviewer\": \"<string>\",\n        \"content\": \"<string>\",\n        \"time\": \"<int>\"\n      },\n      {\n        \"image\": \"<base64>\",\n        \"reviewer\": \"<string>\",\n        \"content\": \"<string>\",\n        \"time\": \"<int>\"\n      }\n    ],\n    \"title\": \"<string>\",\n    \"totalPages\": \"<int>\",\n    \"uri\": \"<string>\"\n  },\n  \"author\": {\n    \"name\": \"<string>\",\n    \"stageName\": \"<string>\",\n    \"nationality\": \"<string>\",\n    \"birthDate\": \"<string>\",\n    \"birthPlace\": \"<string>\",\n    \"deathDate\": \"<string>\",\n    \"website\": \"<string>\",\n    \"description\": \"<string>\",\n    \"image\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/books/search?keyword=<string>&genreId=<int>&genreSlug=<string>&limit=<int>&offset=<int>&orderBy=<string>&orderDirection=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												"search"
											],
											"query": [
												{
													"key": "keyword",
													"value": "<string>"
												},
												{
													"key": "genreId",
													"value": "<int>"
												},
												{
													"key": "genreSlug",
													"value": "<string>"
												},
												{
													"key": "limit",
													"value": "<int>"
												},
												{
													"key": "offset",
													"value": "<int>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "orderDirection",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"categoryId\": \"<string>\",\n  \"limit\": \"<string>\",\n  \"offset\": \"<string>\",\n  \"orderBy\": \"<string>\",\n  \"orderDirection\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "(Book service) Get book details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/books/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<int>",
											"description": "(Required) id of the book."
										}
									]
								},
								"description": "- Get book details by its id\n- Screen Details of book\n"
							},
							"response": [
								{
									"name": "Book details information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/books/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<int>",
													"description": "(Required) id of the book."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"author\": [\n    {\n      \"name\": \"<string>\",\n      \"stageName\": \"<string>\",\n      \"nationality\": \"<string>\",\n      \"birthDate\": \"<string>\",\n      \"birthPlace\": \"<string>\",\n      \"deathDate\": \"<string>\",\n      \"website\": \"<string>\",\n      \"description\": \"<string>\",\n      \"image\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"stageName\": \"<string>\",\n      \"nationality\": \"<string>\",\n      \"birthDate\": \"<string>\",\n      \"birthPlace\": \"<string>\",\n      \"deathDate\": \"<string>\",\n      \"website\": \"<string>\",\n      \"description\": \"<string>\",\n      \"image\": \"<string>\"\n    }\n  ],\n  \"avgRating\": \"<double>\",\n  \"categories\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"description\": \"<string>\",\n  \"genres\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<int>\",\n  \"image\": \"<base64>\",\n  \"language\": \"<string>\",\n  \"publicationTime\": \"<int>\",\n  \"publisher\": \"<string>\",\n  \"ratingCount\": \"<int>\",\n  \"reviews\": [\n    {\n      \"image\": \"<base64>\",\n      \"reviewer\": \"<string>\",\n      \"content\": \"<string>\",\n      \"time\": \"<int>\"\n    },\n    {\n      \"image\": \"<base64>\",\n      \"reviewer\": \"<string>\",\n      \"content\": \"<string>\",\n      \"time\": \"<int>\"\n    }\n  ],\n  \"title\": \"<string>\",\n  \"totalPages\": \"<int>\",\n  \"uri\": \"<string>\"\n}"
								},
								{
									"name": "Not found error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/books/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<int>",
													"description": "(Required) id of the book."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "(Book service) Get genres of books",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/books/genres?limit=<int>&offset=<int>&orderBy=<string>&orderDirection=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books",
										"genres"
									],
									"query": [
										{
											"key": "limit",
											"value": "<int>",
											"description": "limit the number of records to fetch, default 100."
										},
										{
											"key": "offset",
											"value": "<int>",
											"description": "offset to fetch from, default 0."
										},
										{
											"key": "orderBy",
											"value": "<string>",
											"description": "field to orderBy, default 'id'."
										},
										{
											"key": "orderDirection",
											"value": "<string>",
											"description": "direction to sort, default 'asc'"
										}
									]
								},
								"description": "- Retrieves genres of books\n- Screen Home, used to list genres of books available.\n"
							},
							"response": [
								{
									"name": "List of genres",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/books/genres?limit=<int>&offset=<int>&orderBy=<string>&orderDirection=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												"genres"
											],
											"query": [
												{
													"key": "limit",
													"value": "<int>"
												},
												{
													"key": "offset",
													"value": "<int>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "orderDirection",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"id\": \"<int>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"id\": \"<int>\"\n    }\n  ],\n  \"limit\": \"<int>\",\n  \"numPages\": \"<int>\",\n  \"offset\": \"<int>\",\n  \"totalItems\": \"<int>\"\n}"
								},
								{
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/books/genres?limit=<int>&offset=<int>&orderBy=<string>&orderDirection=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												"genres"
											],
											"query": [
												{
													"key": "limit",
													"value": "<int>"
												},
												{
													"key": "offset",
													"value": "<int>"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "orderDirection",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "(Ontology service) Process search query with ontology-based logic",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/ontology/search?keyword=<string>&limit=<int>&offset=<int>&orderBy=<string>&orderDirection=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"ontology",
								"search"
							],
							"query": [
								{
									"key": "keyword",
									"value": "<string>",
									"description": "keyword, sentence to search."
								},
								{
									"key": "limit",
									"value": "<int>",
									"description": "limit the number of records to fetch, default 5."
								},
								{
									"key": "offset",
									"value": "<int>",
									"description": "offset to fetch from, default 0."
								},
								{
									"key": "orderBy",
									"value": "<string>",
									"description": "field to orderBy, default 'avgRating'."
								},
								{
									"key": "orderDirection",
									"value": "<string>",
									"description": "direction to sort, default 'desc'"
								}
							]
						},
						"description": "Return books search by keyword/ sentence\n"
					},
					"response": [
						{
							"name": "List of books",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ontology/search?keyword=<string>&limit=<int>&offset=<int>&orderBy=<string>&orderDirection=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ontology",
										"search"
									],
									"query": [
										{
											"key": "keyword",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<int>"
										},
										{
											"key": "offset",
											"value": "<int>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										},
										{
											"key": "orderDirection",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<int>\",\n      \"uri\": \"<string>\",\n      \"title\": \"<string>\",\n      \"avgRating\": \"<double>\",\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"genres\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publisher\": \"<string>\",\n      \"author\": [\n        {\n          \"name\": \"<string>\",\n          \"stageName\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"birthDate\": \"<string>\",\n          \"birthPlace\": \"<string>\",\n          \"deathDate\": \"<string>\",\n          \"website\": \"<string>\",\n          \"description\": \"<string>\",\n          \"image\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"stageName\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"birthDate\": \"<string>\",\n          \"birthPlace\": \"<string>\",\n          \"deathDate\": \"<string>\",\n          \"website\": \"<string>\",\n          \"description\": \"<string>\",\n          \"image\": \"<string>\"\n        }\n      ],\n      \"language\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicationTime\": \"<int>\",\n      \"totalPages\": \"<int>\",\n      \"ratingCount\": \"<int>\"\n    },\n    {\n      \"id\": \"<int>\",\n      \"uri\": \"<string>\",\n      \"title\": \"<string>\",\n      \"avgRating\": \"<double>\",\n      \"categories\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"genres\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"publisher\": \"<string>\",\n      \"author\": [\n        {\n          \"name\": \"<string>\",\n          \"stageName\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"birthDate\": \"<string>\",\n          \"birthPlace\": \"<string>\",\n          \"deathDate\": \"<string>\",\n          \"website\": \"<string>\",\n          \"description\": \"<string>\",\n          \"image\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"stageName\": \"<string>\",\n          \"nationality\": \"<string>\",\n          \"birthDate\": \"<string>\",\n          \"birthPlace\": \"<string>\",\n          \"deathDate\": \"<string>\",\n          \"website\": \"<string>\",\n          \"description\": \"<string>\",\n          \"image\": \"<string>\"\n        }\n      ],\n      \"language\": \"<string>\",\n      \"description\": \"<string>\",\n      \"publicationTime\": \"<int>\",\n      \"totalPages\": \"<int>\",\n      \"ratingCount\": \"<int>\"\n    }\n  ],\n  \"limit\": \"<int>\",\n  \"numPages\": \"<int>\",\n  \"offset\": \"<int>\",\n  \"totalItems\": \"<int>\",\n  \"author\": {\n    \"name\": \"<string>\",\n    \"stageName\": \"<string>\",\n    \"nationality\": \"<string>\",\n    \"birthDate\": \"<string>\",\n    \"birthPlace\": \"<string>\",\n    \"deathDate\": \"<string>\",\n    \"website\": \"<string>\",\n    \"description\": \"<string>\",\n    \"image\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Invalid input or bad request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ontology/search?keyword=<string>&limit=<int>&offset=<int>&orderBy=<string>&orderDirection=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ontology",
										"search"
									],
									"query": [
										{
											"key": "keyword",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<int>"
										},
										{
											"key": "offset",
											"value": "<int>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										},
										{
											"key": "orderDirection",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ontology/search?keyword=<string>&limit=<int>&offset=<int>&orderBy=<string>&orderDirection=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ontology",
										"search"
									],
									"query": [
										{
											"key": "keyword",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "<int>"
										},
										{
											"key": "offset",
											"value": "<int>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										},
										{
											"key": "orderDirection",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "",
			"type": "string"
		}
	]
}